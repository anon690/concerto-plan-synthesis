$ python concerto_scheduling_examples/centraluser_interruption.py 30

computing maximum schedule
31/31 behaviors scheduled
optimzing schedule
synthesis completed
total time: 6.013 seconds
SMT solving time: 2.768 seconds
number of call to SMT solver: 6
number of sat problems: 6
number of unsat problems: 0
avg solving time (sat): 0.461 seconds
scheduled behaviors: 31
synchronization steps before optimization: 3
solution

pushB(u, suspend)
pushB(u, stop)
wait(u)
pushB(p5, stop)
pushB(p24, stop)
pushB(p0, stop)
pushB(p21, stop)
pushB(p15, stop)
pushB(p25, stop)
pushB(p7, stop)
pushB(p2, stop)
pushB(p18, stop)
pushB(p16, stop)
pushB(p13, stop)
pushB(p4, stop)
pushB(p20, stop)
pushB(p11, stop)
pushB(p6, stop)
pushB(p1, stop)
pushB(p26, stop)
pushB(p22, stop)
pushB(p14, stop)
pushB(p17, stop)
pushB(p8, stop)
pushB(p3, stop)
pushB(p10, stop)
pushB(p19, stop)
pushB(p27, stop)
pushB(p28, stop)
pushB(p9, stop)
pushB(p12, stop)
pushB(p23, stop)
wait(p15)
wait(p16)
wait(p17)
wait(p18)
wait(p19)
wait(p0)
wait(p20)
wait(p21)
wait(p22)
wait(p1)
wait(p23)
wait(p2)
wait(p24)
wait(p3)
wait(p25)
wait(p4)
wait(p26)
wait(p5)
wait(p27)
wait(p6)
wait(p28)
wait(p7)
wait(p8)
wait(p9)
wait(p10)
wait(p11)
wait(p12)
wait(p13)
wait(p14)

